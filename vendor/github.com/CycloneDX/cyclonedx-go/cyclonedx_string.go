// Code generated by "stringer -linecomment -output cyclonedx_string.go -type MediaType,SpecVersion"; DO NOT EDIT.

package cyclonedx

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MediaTypeJSON-1]
	_ = x[MediaTypeXML-2]
	_ = x[MediaTypeProtobuf-3]
}

const _MediaType_name = "application/vnd.cyclonedx+jsonapplication/vnd.cyclonedx+xmlapplication/x.vnd.cyclonedx+protobuf"

var _MediaType_index = [...]uint8{0, 30, 59, 95}

func (i MediaType) String() string {
	i -= 1
	if i < 0 || i >= MediaType(len(_MediaType_index)-1) {
		return "MediaType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MediaType_name[_MediaType_index[i]:_MediaType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SpecVersion1_0-1]
	_ = x[SpecVersion1_1-2]
	_ = x[SpecVersion1_2-3]
	_ = x[SpecVersion1_3-4]
	_ = x[SpecVersion1_4-5]
}

const _SpecVersion_name = "1.01.11.21.31.4"

var _SpecVersion_index = [...]uint8{0, 3, 6, 9, 12, 15}

func (i SpecVersion) String() string {
	i -= 1
	if i < 0 || i >= SpecVersion(len(_SpecVersion_index)-1) {
		return "SpecVersion(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _SpecVersion_name[_SpecVersion_index[i]:_SpecVersion_index[i+1]]
}
