// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudfoundry/bosh-cli/cmd (interfaces: DeploymentDeleter)

// Package mocks is a generated GoMock package.
package mocks

import (
	ui "github.com/cloudfoundry/bosh-cli/ui"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDeploymentDeleter is a mock of DeploymentDeleter interface
type MockDeploymentDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentDeleterMockRecorder
}

// MockDeploymentDeleterMockRecorder is the mock recorder for MockDeploymentDeleter
type MockDeploymentDeleterMockRecorder struct {
	mock *MockDeploymentDeleter
}

// NewMockDeploymentDeleter creates a new mock instance
func NewMockDeploymentDeleter(ctrl *gomock.Controller) *MockDeploymentDeleter {
	mock := &MockDeploymentDeleter{ctrl: ctrl}
	mock.recorder = &MockDeploymentDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeploymentDeleter) EXPECT() *MockDeploymentDeleterMockRecorder {
	return m.recorder
}

// DeleteDeployment mocks base method
func (m *MockDeploymentDeleter) DeleteDeployment(arg0 ui.Stage) error {
	ret := m.ctrl.Call(m, "DeleteDeployment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDeployment indicates an expected call of DeleteDeployment
func (mr *MockDeploymentDeleterMockRecorder) DeleteDeployment(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDeployment", reflect.TypeOf((*MockDeploymentDeleter)(nil).DeleteDeployment), arg0)
}
