---
groups:
- name: all
  jobs:
  - test-unit
  - test-integration
  - test-acceptance-xenial
  - integration-postgres
  - build
  - build-alpha
  - bump-minor
  - bump-major
  - bump-deps
  - test-helper-urls

jobs:
  - name: bump-deps
    public: true
    plan:
      - get: weekly
        trigger: true
      - get: bosh-cli
      - get: golang-release
      - task: bump-deps
        file: golang-release/ci/tasks/shared/bump-deps.yml
        input_mapping:
          input_repo: bosh-cli
        output_mapping:
          output_repo: bumped-bosh-cli
      - task: test-unit
        input_mapping:
          bosh-cli: bumped-bosh-cli
        file: bosh-cli/ci/tasks/test-unit.yml
      - put: bosh-cli
        params:
          repository: bumped-bosh-cli

  - name: test-unit
    public: true
    plan:
      - get: bosh-cli
        trigger: true
      - task: test-unit
        file: bosh-cli/ci/tasks/test-unit.yml

  - name: test-integration
    public: true
    plan:
      - get: bosh-cli
        trigger: true
      - task: test-integration
        file: bosh-cli/ci/tasks/test-integration.yml
        privileged: true

  - name: test-acceptance-xenial
    public: true
    plan:
      - in_parallel:
        - get: bosh-cli
          passed: [test-unit,test-integration]
          trigger: true
        - get: bosh-warden-cpi-release
          trigger: true
        - get: bosh-warden-stemcell-xenial
      - in_parallel:
        - task: test-acceptance
          file: bosh-cli/ci/tasks/test-acceptance.yml
          privileged: true

  - name: integration-postgres
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - in_parallel:
        - get: bosh-src
          trigger: true
        - get: version-semver
          params: {bump: patch}
        - get: bosh-cli
          passed: [test-unit,test-integration]
          trigger: true
        - get: bosh-agent
          trigger: true
        - get: integration-tests-parallel-runtime

      - task: build-linux
        file: bosh-cli/ci/tasks/build-linux.yml

      - task: tests
        privileged: true
        input_mapping:
          bosh-cli: compiled-linux
        file: bosh-src/ci/tasks/test-integration.yml
        params:
          DB: postgresql

  - name: build
    public: true
    plan:
      - in_parallel:
        - get: bosh-cli
          passed:
           - test-acceptance-xenial
           - integration-postgres
        - get: version-semver
        - get: homebrew-tap
      - in_parallel:
        - task: build-linux
          file: bosh-cli/ci/tasks/build-linux.yml
        - task: build-darwin
          file: bosh-cli/ci/tasks/build-darwin.yml
        - task: build-darwin-arm64
          file: bosh-cli/ci/tasks/build-darwin-arm64.yml
        - task: build-windows
          file: bosh-cli/ci/tasks/build-windows.yml

      - task: build-checksum-file
        file: bosh-cli/ci/tasks/build-checksum-file.yml

      - task: create-dockerfile
        file: bosh-cli/ci/tasks/create-dockerfile.yml

      - put: bosh-cli-commit-status
        params:
          state: success
          commit: bosh-cli

      - {put: bosh-cli, params: {repository: bosh-cli, tag: version-semver/number, tag_prefix: v}}

      - in_parallel:
        - {put: release-bucket-linux, params: {file: compiled-linux/bosh-cli-*-linux-amd64}}
        - {put: release-bucket-darwin, params: {file: compiled-darwin/bosh-cli-*-darwin-amd64}}
        - {put: release-bucket-darwin-arm64, params: {file: compiled-darwin-arm64/bosh-cli-*-darwin-arm64}}
        - {put: release-bucket-windows, params: {file: compiled-windows/bosh-cli-*-windows-amd64.exe}}

        - put: final-docker
          params:
            build: docker-assets
            tag: version-semver/number
            tag_as_latest: true

      - do:
        - task: prepare-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: alpine}
            run:
              path: /bin/sh
              args:
              - -c
              - |
                echo -n "v" >> release-version/version
                cat version-semver/number >> release-version/version
            inputs:
            - name: version-semver
            outputs:
            - name: release-version
        - put: github-release
          params:
            name: release-version/version
            tag: release-version/version
            globs:
              - compiled-linux/bosh-cli-*-linux-amd64
              - compiled-darwin/bosh-cli-*-darwin-amd64
              - compiled-darwin-arm64/bosh-cli-*-darwin-arm64
              - compiled-windows/bosh-cli-*-windows-amd64.exe
            body: checksums/checksums

      - task: update-homebrew-formula
        file: bosh-cli/ci/tasks/update-homebrew-formula.yml
      - put: homebrew-tap
        params:
          repository: update-brew-formula-output/homebrew-tap
      - put: version-semver
        params:
          bump: patch

  - name: build-alpha
    public: true
    plan:
      - in_parallel:
        - get: bosh-cli
          passed:
           - test-acceptance-xenial
           - integration-postgres
          trigger: true
        - get: alpha-version-semver
          params: {bump: patch}
      - {put: alpha-version-semver, params: {file: alpha-version-semver/number}}
      - in_parallel:
        - task: build-linux
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-linux.yml
          params:
            FILENAME_PREFIX: "alpha-"
        - task: build-darwin
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-darwin.yml
          params:
            FILENAME_PREFIX: "alpha-"
        - task: build-darwin-arm64
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-darwin-arm64.yml
          params:
            FILENAME_PREFIX: "alpha-"
        - task: build-windows
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-windows.yml
          params:
            FILENAME_PREFIX: "alpha-"

      - in_parallel:
        - {put: alpha-release-bucket-linux, params: {file: compiled-linux/alpha-bosh-cli-*-linux-amd64}}
        - {put: alpha-release-bucket-darwin, params: {file: compiled-darwin/alpha-bosh-cli-*-darwin-amd64}}
        - {put: alpha-release-bucket-darwin-arm64, params: {file: compiled-darwin-arm64/alpha-bosh-cli-*-darwin-arm64}}
        - {put: alpha-release-bucket-windows, params: {file: compiled-windows/alpha-bosh-cli-*-windows-amd64.exe}}

  - name: test-helper-urls
    public: true
    plan:
      - in_parallel:
        - get: alpha-release-bucket-linux
          passed: [build-alpha]
        - get: bosh-cli
          passed: [build-alpha]
      - task: test-helper-urls
        file: bosh-cli/ci/tasks/test-helper-urls.yml

  - name: bump-minor
    public: true
    plan:
      - get: version-semver
        params: {bump: minor}
      - {put: version-semver, params: {file: version-semver/number}}

  - name: bump-major
    public: true
    plan:
      - get: version-semver
        params: {bump: major}
      - {put: version-semver, params: {file: version-semver/number}}


resources:
  - name: bosh-src
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh.git

  - name: bosh-agent
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-agent.git
      branch: main

  - name: bosh-cli
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-cli.git
      branch: main
      private_key: {{concourse_github_private_key}}

  - name: bosh-warden-stemcell-xenial
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-xenial-go_agent

  - name: bosh-warden-cpi-release
    type: bosh-io-release
    source:
      repository: cppforlife/bosh-warden-cpi-release

  - name: bosh-cli-commit-status
    type: github-status
    source:
      repository: cloudfoundry/bosh-cli
      access_token: {{github_token}}
      branch: main
      context: ci/published

  - name: golang-release
    type: git
    source:
      uri: https://github.com/bosh-packages/golang-release.git

  - name: release-bucket-linux
    type: s3
    source:
      regexp: bosh-cli-(.*)-linux-amd64
      bucket: {{aws_s3_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: release-bucket-darwin
    type: s3
    source:
      regexp: bosh-cli-(.*)-darwin-amd64
      bucket: {{aws_s3_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: release-bucket-darwin-arm64
    type: s3
    source:
      regexp: bosh-cli-(.*)-darwin-arm64
      bucket: {{aws_s3_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: release-bucket-windows
    type: s3
    source:
      regexp: bosh-cli-(.*)-windows-amd64.exe
      bucket: {{aws_s3_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: alpha-release-bucket-linux
    type: s3
    source:
      regexp: alpha-bosh-cli-(.*)-linux-amd64
      bucket: {{aws_s3_alpha_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: alpha-release-bucket-darwin
    type: s3
    source:
      regexp: alpha-bosh-cli-(.*)-darwin-amd64
      bucket: {{aws_s3_alpha_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: alpha-release-bucket-darwin-arm64
    type: s3
    source:
      regexp: alpha-bosh-cli-(.*)-darwin-arm64
      bucket: {{aws_s3_alpha_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: alpha-release-bucket-windows
    type: s3
    source:
      regexp: alpha-bosh-cli-(.*)-windows-amd64.exe
      bucket: {{aws_s3_alpha_release_bucket}}
      region_name: {{aws_s3_release_bucket_region}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: version-semver
    type: semver
    source:
      initial_version: 0.0.1
      key: cli-current-version
      bucket: {{aws_s3_release_bucket}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: alpha-version-semver
    type: semver
    source:
      initial_version: 0.0.1
      key: cli-alpha-current-version
      bucket: {{aws_s3_alpha_release_bucket}}
      access_key_id: {{aws_s3_release_bucket_access_key}}
      secret_access_key: {{aws_s3_release_bucket_secret_key}}

  - name: homebrew-tap
    type: git
    source:
      uri: git@github.com:cloudfoundry/homebrew-tap
      branch: master
      private_key: {{cloudfoundry_homebrew_tap_deploy_key}}

  - name: github-release
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-cli
      access_token: {{github_token}}
      drafts: true

  - name: final-docker
    type: docker-image
    source:
      repository: bosh/cli2
      username: {{docker_username}}
      password: {{docker_password}}
      email: foo@bar.com

  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [Saturday]

  - name: integration-tests-parallel-runtime
    type: s3
    source:
      bucket: ((integration_runtime_bucket))
      access_key_id: ((integration_runtime_access_key_id))
      secret_access_key: ((integration_runtime_secret_access_key))
      versioned_file: "parallel_runtime_rspec.log"

resource_types:
  - name: github-status
    type: docker-image
    source:
      repository: dpb587/github-status-resource
      tag: master
